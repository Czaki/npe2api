{"name": "napari-clusters-plotter", "display_name": "napari-clusters-plotter", "schema_version": "0.1.0", "on_activate": null, "on_deactivate": null, "contributions": {"commands": [{"id": "napari-clusters-plotter.MeasureWidget", "title": "MeasureWidget", "python_name": "napari_clusters_plotter._measure:MeasureWidget", "short_title": null, "category": null, "icon": null, "enablement": null}, {"id": "napari-clusters-plotter.PlotterWidget", "title": "PlotterWidget", "python_name": "napari_clusters_plotter._plotter:PlotterWidget", "short_title": null, "category": null, "icon": null, "enablement": null}, {"id": "napari-clusters-plotter.DimensionalityReductionWidget", "title": "DimensionalityReductionWidget", "python_name": "napari_clusters_plotter._dimensionality_reduction:DimensionalityReductionWidget", "short_title": null, "category": null, "icon": null, "enablement": null}, {"id": "napari-clusters-plotter.ClusteringWidget", "title": "ClusteringWidget", "python_name": "napari_clusters_plotter._clustering:ClusteringWidget", "short_title": null, "category": null, "icon": null, "enablement": null}], "readers": null, "writers": null, "widgets": [{"command": "napari-clusters-plotter.MeasureWidget", "display_name": "MeasureWidget", "autogenerate": false}, {"command": "napari-clusters-plotter.PlotterWidget", "display_name": "PlotterWidget", "autogenerate": false}, {"command": "napari-clusters-plotter.DimensionalityReductionWidget", "display_name": "DimensionalityReductionWidget", "autogenerate": false}, {"command": "napari-clusters-plotter.ClusteringWidget", "display_name": "ClusteringWidget", "autogenerate": false}], "sample_data": null, "themes": null, "menus": {}, "submenus": null}, "package_metadata": {"metadata_version": "2.1", "name": "napari-clusters-plotter", "version": "0.5.1", "dynamic": null, "platform": null, "supported_platform": null, "summary": "A plugin to use with napari for clustering objects according to their properties", "description": "# napari-clusters-plotter\n\n[![License](https://img.shields.io/pypi/l/napari-clusters-plotter.svg?color=green)](https://github.com/lazigu/napari-clusters-plotter/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-clusters-plotter.svg?color=green)](https://pypi.org/project/napari-clusters-plotter)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-clusters-plotter.svg?color=green)](https://python.org)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/napari-clusters-plotter/badges/version.svg)](https://anaconda.org/conda-forge/napari-clusters-plotter)\n[![tests](https://github.com/lazigu/napari-clusters-plotter/workflows/tests/badge.svg)](https://github.com/lazigu/napari-clusters-plotter/actions)\n[![codecov](https://codecov.io/gh/BiAPoL/napari-clusters-plotter/branch/main/graph/badge.svg?token=R6W2KO1NJ8)](https://codecov.io/gh/BiAPoL/napari-clusters-plotter)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/napari-clusters-plotter.svg)](https://pypistats.org/packages/napari-clusters-plotter)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-clusters-plotter)](https://www.napari-hub.org/plugins/napari-clusters-plotter)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5884658.svg)](https://doi.org/10.5281/zenodo.5884658)\n\nA plugin to use with napari for clustering objects according to their properties.\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/screencast.gif)\n\n----------------------------------\n\nJump to:\n- [Usage](#usage)\n  - [Starting point](#starting-point)\n  - [Measurements](#measurements)\n  - [Time-Lapse Measurements](#time-lapse-measurements)\n  - [Plotting](#plotting)\n  - [Time-Lapse Plotting](#time-lapse-plotting)\n  - [Dimensionality reduction: UMAP, t-SNE or PCA](#dimensionality-reduction-umap-t-sne-or-pca)\n  - [Clustering](#clustering)\n  - [Plotting clustering results](#plotting-clustering-results)\n- [Installation](#installation)\n- [Troubleshooting installation](#troubleshooting-installation)\n- [Contributing](#contributing)\n- [License](#license)\n- [Acknowledgements](#acknowledgements)\n\n\n## Usage\n\n### Starting point\nFor clustering objects according to their properties, the starting point is a [grey-value image](example_data/blobs.tif) and a label image\nrepresenting a segmentation of objects. For segmenting objects, you can for example use the\n[Voronoi-Otsu-labelling approach](https://github.com/haesleinhuepf/napari-segment-blobs-and-things-with-membranes#voronoi-otsu-labelling)\nin the napari plugin [napari-segment-blobs-and-things-with-membranes](https://www.napari-hub.org/plugins/napari-segment-blobs-and-things-with-membranes).\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/starting_point.png)\n\n### Measurements\nThe first step is deriving measurements from the labelled image and the corresponding pixels in the grey-value image.\nYou can use the menu `Tools > Measurement > Measure intensity, shape and neighbor counts (ncp)` for that.\nJust select the image, the corresponding label image and the measurements to analyse and click on `Run`.\nA table with the measurements will open:\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/measure.png)\n\nAfterwards, you can save and/or close the measurement table. Also, close the Measure widget.\nIf you are uploading your own measurements make sure that there is a column that specifies the which measurement belongs to which label\nby adding a column with the name \"label\". If you don't specify this column it will be assumed that measurements start at 1 and each \ncolumn describes the next label.\n\n#### Time-Lapse Measurements\nIf you have 3D time-lapse data this will automatically be detected. In case you have 2D time-lapse data you need to\nconvert it into a suitable shape using the function: `Tools > Utilities > Convert 3D stack to 2D time-lapse (time-slicer)`,\nwhich can be found in the [napari time slicer](https://www.napari-hub.org/plugins/napari-time-slicer).\nNote that tables for time-lapse data will include an additional column named \"frame\", which indicates which slice in\ntime the given row refers to. If you want to import your own csv files for time-lapse data make sure to include this column!\nIf you have tracking data where each column specifies measurements for a track instead of a label at a specific time point, \nthis column must not be added.\n\n### Plotting\n\nOnce measurements were made, these measurements were saved in the `properties` of the labels layer which was analysed.\nYou can then plot these measurements using the menu `Tools > Measurement > Plot measurement (ncp)`.\n\nIn this widget, you can select the labels layer which was analysed and the measurements which should be plotted\non the X- and Y-axis. If you cannot see any options in axes selection boxes, but you have performed measurements, click\non `Update Axes/Clustering Selection Boxes` to refresh them. Click on `Run` to draw the data points in the plot area.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/plot_plain.png)\n\nYou can also manually select a region in the plot. To use lasso (freehand) tool use left mouse click, and to use a\nrectangle - right click. The resulting manual clustering will also be visualized in the original image. To optimize\nvisualization in the image, turn off the visibility of the analysed labels layer.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/plot_interactive.png)\n\nHold down the SHIFT key while annotating regions in the plot to manually select multiple clusters.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/multi-select-manual-clustering.gif)\n\n#### Time-Lapse Plotting\nWhen you plot your time-lapse datasets you will notice that the plots look slightly different.\nDatapoints of the current time frame are highlighted in white and you can see the datapoints move through the plot if you press play:\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/plotting_time-lapse_data_as_movie.gif)\n\nYou can also manually select groups using the lasso tool and plot a measurement per frame and see how the group behaves in time.\nFurthermore, you could also select a group in time and see where the datapoints lie in a different feature space:\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/timelapse_manual_clustering_tips.gif)\n\n### Dimensionality reduction: UMAP, t-SNE or PCA\n\nFor getting more insights into your data, you can reduce the dimensionality of the measurements, e.g.\nusing the [UMAP algorithm](https://umap-learn.readthedocs.io/en/latest/), [t-SNE](https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html)\nor [PCA](https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html).\nTo apply it to your data use the menu `Tools > Measurement > Dimensionality reduction (ncp)`.\nSelect the label image that was analysed and in the list below, select all measurements that should be\ndimensionality reduced. By default, all measurements are selected in the box. If you cannot see any measurements, but\nyou have performed them, click on `Update Measurements` to refresh the box. You can read more about parameters of both\nalgorithms by hovering over question marks or by clicking on them. When you are done with the selection, click on `Run`\nand after a moment, the table of measurements will re-appear with two additional columns representing the reduced\ndimensions of the dataset. These columns are automatically saved in the `properties` of the labels layer so there is no\nneed to save them for usage in other widgets unless you wish to do so.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/umap.png)\n\nAfterwards, you can again save and/or close the table. Also, close the Dimensionality Reduction widget.\n\n### Clustering\nIf manual clustering, as shown above, is not an option, you can automatically cluster your data, using these implemented algorithms:\n* [k-means clustering (KMEANS)](https://towardsdatascience.com/k-means-clustering-algorithm-applications-evaluation-methods-and-drawbacks-aa03e644b48a)\n* [Hierarchical Density-Based Spatial Clustering of Applications with Noise (HDBSCAN)](https://hdbscan.readthedocs.io/en/latest/how_hdbscan_works.html)\n* [Gaussian Mixture Model (GMM)](https://scikit-learn.org/stable/modules/mixture.html)\n* [Mean Shift (MS)](https://scikit-learn.org/stable/auto_examples/cluster/plot_mean_shift.html#sphx-glr-auto-examples-cluster-plot-mean-shift-py)\n* [Agglomerative clustering (AC)](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html)\n\nTherefore, click the menu `Tools > Measurement > Clustering (ncp)`,\nagain, select the analysed labels layer.\nThis time select the measurements for clustering, e.g. select _only_ the `UMAP` measurements.\nSelect the clustering method `KMeans` and click on `Run`.\nThe table of measurements will reappear with an additional column `ALGORITHM_NAME_CLUSTERING_ID` containing the cluster\nID of each datapoint.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/clustering.png)\n\nAfterwards, you can again save and/or close the table. Also, close the clustering widget.\n\n### Plotting clustering results\nReturn to the Plotter widget using the menu `Tools > Measurement > Plot measurement (ncp)`.\nSelect `UMAP_0` and `UMAP_1` as X- and Y-axis and the `ALGORITHM_NAME_CLUSTERING_ID` as `Clustering`, and click on `Run`.\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/hdbscan_clusters_plot.png)\n\nExample of k-means clustering results:\n\n![](https://github.com/BiAPoL/napari-clusters-plotter/raw/main/images/kmeans_clusters_plot.png)\n\n## Installation\n\n* Get a python environment, e.g. via [mini-conda](https://docs.conda.io/en/latest/miniconda.html).\n  If you never used python/conda environments before, please follow the instructions\n  [here](https://mpicbg-scicomp.github.io/ipf_howtoguides/guides/Python_Conda_Environments) first. It is recommended to\n  install python 3.9 to your new conda environment from the start. The plugin is not yet supported with Python 3.10.\n  Create a new environment, for example, like this:\n\n```\nconda create --name ncp-env python=3.9\n```\n\n* Activate the new environment via conda:\n\n```\nconda activate ncp-env\n```\n\n* Install [pyopencl](https://documen.tician.de/pyopencl/), e.g. via conda:\n\n```\nconda install -c conda-forge pyopencl\n```\n\n* Install [napari], e.g. via [pip]:\n\n```\npython -m pip install \"napari[all]\"\n```\n\nAfterwards, you can install `napari-clusters-plotter` via [pip]:\n\n```\npip install napari-clusters-plotter\n```\n\n## Troubleshooting installation\n\n- If the plugin does not appear in napari 'Plugins' menu, and in 'Plugin errors...' you can see such an error:\n\n```\nImportError: DLL load failed while importing _cl\n```\n\nTry downloading and installing a pyopencl with a lower cl version, e.g. cl12 : pyopencl=2020.1. However, in this case,\nyou will need an environment with a lower python version (python=3.8).\n\n- `Error: Could not build wheels for hdbscan which use PEP 517 and cannot be installed directly`\n\nInstall hdbscan via conda before installing the plugin:\n\n```\nconda install -c conda-forge hdbscan\n```\n\n- `ValueError: numpy.ndarray size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject`\n\nSimilar to the above-described error, this error can occur when importing hdbscan through pip or in the wrong order. This can be fixed by installing packages separately through conda and in the following order:\n```bash\nconda install -c conda-forge napari pyopencl hdbscan\npip install napari-clusters-plotter\n```\n\n- `WARNING: No ICDs were found` or `LogicError: clGetPlatformIDs failed: PLATFORM_NOT_FOUND_KHR`\n\nMake your system-wide implementation visible by installing either of the following conda packages:\n\n```\nconda install -c conda-forge ocl-icd-system\nconda install -c conda-forge ocl_icd_wrapper_apple\n```\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [pytest], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-clusters-plotter\" is free and open source software\n\n## Acknowledgements\nThis project was supported by the Deutsche Forschungsgemeinschaft under Germany\u2019s Excellence Strategy \u2013 EXC2068 - Cluster of Excellence \"Physics of Life\" of TU Dresden.\nThis project has been made possible in part by grant number [2021-240341 (Napari plugin accelerator grant)](https://chanzuckerberg.com/science/programs-resources/imaging/napari/improving-image-processing/) from the Chan Zuckerberg Initiative DAF, an advised fund of the Silicon Valley Community Foundation.\n\n## Issues\n\nIf you encounter any problems, please [file an issue](https://github.com/BiAPoL/napari-clusters-plotter/issues) along\nwith a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[napari]: https://github.com/napari/napari\n[pytest]: https://docs.pytest.org/en/7.0.x/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n", "description_content_type": "text/markdown", "keywords": null, "home_page": "https://github.com/BiAPoL/napari-clusters-plotter", "download_url": null, "author": "Laura Zigutyte, Ryan Savill, Johannes M\u00fcller, Marcelo Zoccoler, Robert Haase", "author_email": "zigutyte@gmail.com, robert.haase@tu-dresden.de", "maintainer": null, "maintainer_email": null, "license": "BSD-3-Clause", "classifier": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Framework :: napari", "Topic :: Software Development :: Testing", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Operating System :: OS Independent", "License :: OSI Approved :: BSD License"], "requires_dist": ["napari-plugin-engine (>=0.1.4)", "numpy (>=1.21)", "pyopencl", "pyclesperanto-prototype", "scikit-learn", "pandas", "umap-learn", "napari-tools-menu", "napari-skimage-regionprops (>=0.3.1)", "hdbscan"], "requires_python": "<3.10,>=3.7", "requires_external": null, "project_url": ["Bug Tracker, https://github.com/BiAPoL/napari-clusters-plotter/issues", "Documentation, https://github.com/BiAPoL/napari-clusters-plotter", "Source Code, https://github.com/BiAPoL/napari-clusters-plotter", "User Support, https://github.com/BiAPoL/napari-clusters-plotter/issues"], "provides_extra": null, "provides_dist": null, "obsoletes_dist": null}, "npe1_shim": true}