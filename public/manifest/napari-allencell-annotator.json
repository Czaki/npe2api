{
  "name": "napari-allencell-annotator",
  "display_name": "napari-allencell-annotator",
  "schema_version": "0.1.0",
  "on_activate": null,
  "on_deactivate": null,
  "contributions": {
    "commands": [
      {
        "id": "napari-allencell-annotator.MainController",
        "title": "MainController",
        "python_name": "napari_allencell_annotator.controller.main_controller:MainController",
        "short_title": null,
        "category": null,
        "icon": null,
        "enablement": null
      }
    ],
    "readers": null,
    "writers": null,
    "widgets": [
      {
        "command": "napari-allencell-annotator.MainController",
        "display_name": "MainController",
        "autogenerate": false
      }
    ],
    "sample_data": null,
    "themes": null,
    "menus": {},
    "submenus": null
  },
  "package_metadata": {
    "metadata_version": "2.1",
    "name": "napari-allencell-annotator",
    "version": "0.0.7",
    "dynamic": null,
    "platform": [
      "UNKNOWN"
    ],
    "supported_platform": null,
    "summary": "A plugin that enables annotations provided by Allen Institute for Cell Science",
    "description": "# napari-allencell-annotator\n\n[![License BSD-3](https://img.shields.io/pypi/l/napari-allencell-annotator.svg?color=green)](https://github.com/bbridge0200/napari-allencell-annotator/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-allencell-annotator.svg?color=green)](https://pypi.org/project/napari-allencell-annotator)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-allencell-annotator.svg?color=green)](https://python.org)\n[![tests](https://github.com/bbridge0200/napari-allencell-annotator/workflows/tests/badge.svg)](https://github.com/bbridge0200/napari-allencell-annotator/actions)\n[![codecov](https://codecov.io/gh/bbridge0200/napari-allencell-annotator/branch/main/graph/badge.svg)](https://codecov.io/gh/bbridge0200/napari-allencell-annotator)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-allencell-annotator)](https://napari-hub.org/plugins/napari-allencell-annotator)\n\nA plugin that enables large image set annotating and writes annotations to a .csv file. \nPlugin provided by the Allen Institute for Cell Science.\n\nThe Allen Cell Image Annotator plugin for napari provides an intuitive\ngraphical user interface to create annotation templates, annotate large \nimage sets using these templates, and save image annotations to a csv file. \nThe Allen Cell Image Annotator is a Python-based open source toolkit \ndeveloped at the Allen Institute for Cell Science for both blind, unbiased and un-blind \nmicroscope image annotating. This toolkit supports easy image set selection\nfrom a file finder and creation of annotation templates (text, checkbox, drop-down, and spinbox).\nWith napari's multi-dimensional image viewing capabilities and AICSImageIO's\nimage reading and metadata conversion, the plugin seamlessly allows users to\nview each image in a set and annotate according to the selected template.\nAnnotation templates can be written to a json file for sharing or re-using. After annotating,\nboth annotation template data and the annotations written for the image set \nare saved to csv file, which can be re-opened for further annotating and conveniently\nstores annotations.\n\n-   Supports the following image types:\n    - `OME-TIFF`\n    - `TIFF`\n    - `CZI` \n    - `PNG` \n    -   `JPEG` \n\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to files up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-allencell-annotator` via [pip]:\n\n    pip install napari-allencell-annotator\n\n\n\nTo install latest development version :\n\n    pip install git+https://github.com/bbridge0200/napari-allencell-annotator.git\n\n## Quick Start\n\nIn the current version, there are two parts in the plugin: **Image List** and **Annotation Editor**. \nThe **Annotation Editor** allows users to create new annotation templates or upload existing annotation templates \nfrom a previous plugin-created csv or json file. \nOnce an annotation template is chosen and approved, annotating can begin on the image set\nselected in the **Image Uploader** section of the plugin. \n\n1. Select create new annotation template or upload existing. If the annotation template is uploaded from a csv file, using the image set will open and allow continued editing of all annotations in the csv. \n2. Select images for annotating (the plugin is able to support .tiff, .tif. ome.tif, .ome.tiff, .czi, .png, .jpeg, and .jpg files). Once selected, the images can be shuffled and hidden or deleted using the checkbox on the right side. \n3. Start Annotating and select or create a .csv file for writing. If the selected file already exists, it will be overwritten. \n4. Click Save and Exit at any time and all created image annotations will be written to the .csv file. If the file is opened in the plugin again, annotation will start at the first image with a blank annotation.\n\nTo install latest development version :\n\n    pip install git+https://github.com/bbridge0200/napari-allencell-annotator.git\n\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-allencell-annotator\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/bbridge0200/napari-allencell-annotator/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n",
    "description_content_type": "text/markdown",
    "keywords": null,
    "home_page": "https://github.com/aics-int/napari-allencell-annotator/",
    "download_url": null,
    "author": "Allen Institute for Cell Science",
    "author_email": null,
    "maintainer": null,
    "maintainer_email": null,
    "license": "UNKNOWN",
    "classifier": [
      "Intended Audience :: Science/Research",
      "Framework :: napari",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Operating System :: OS Independent",
      "License :: OSI Approved :: BSD License"
    ],
    "requires_dist": [
      "napari (>=0.4.9)",
      "napari-plugin-engine (>=0.1.4)",
      "numpy",
      "aicssegmentation (~=0.4.1)",
      "magicgui (>=0.2.9)",
      "aicsimageio (>=4.0.5)",
      "PyQt5",
      "napari (>=0.4.9) ; extra == 'all'",
      "napari-plugin-engine (>=0.1.4) ; extra == 'all'",
      "numpy ; extra == 'all'",
      "aicssegmentation (~=0.4.1) ; extra == 'all'",
      "magicgui (>=0.2.9) ; extra == 'all'",
      "aicsimageio (>=4.0.5) ; extra == 'all'",
      "PyQt5 ; extra == 'all'",
      "black (>=19.10b0) ; extra == 'all'",
      "codecov (>=2.0.22) ; extra == 'all'",
      "docutils (<0.16,>=0.10) ; extra == 'all'",
      "flake8 (>=3.7.7) ; extra == 'all'",
      "psutil (>=5.7.0) ; extra == 'all'",
      "pytest (>=4.3.0) ; extra == 'all'",
      "pytest-cov (==2.6.1) ; extra == 'all'",
      "pytest-raises (>=0.10) ; extra == 'all'",
      "pytest-qt (>=3.3.0) ; extra == 'all'",
      "quilt3 (>=3.1.12) ; extra == 'all'",
      "pytest-runner ; extra == 'all'",
      "bumpversion (>=0.5.3) ; extra == 'all'",
      "gitchangelog (>=3.0.4) ; extra == 'all'",
      "ipython (>=7.5.0) ; extra == 'all'",
      "m2r (>=0.2.1) ; extra == 'all'",
      "pytest-runner (>=4.4) ; extra == 'all'",
      "Sphinx (<3,>=2.0.0b1) ; extra == 'all'",
      "sphinx-rtd-theme (>=0.1.2) ; extra == 'all'",
      "tox (>=3.5.2) ; extra == 'all'",
      "twine (>=1.13.0) ; extra == 'all'",
      "wheel (>=0.33.1) ; extra == 'all'",
      "black (>=19.10b0) ; extra == 'dev'",
      "bumpversion (>=0.5.3) ; extra == 'dev'",
      "docutils (<0.16,>=0.10) ; extra == 'dev'",
      "flake8 (>=3.7.7) ; extra == 'dev'",
      "gitchangelog (>=3.0.4) ; extra == 'dev'",
      "ipython (>=7.5.0) ; extra == 'dev'",
      "m2r (>=0.2.1) ; extra == 'dev'",
      "pytest (>=4.3.0) ; extra == 'dev'",
      "pytest-cov (==2.6.1) ; extra == 'dev'",
      "pytest-raises (>=0.10) ; extra == 'dev'",
      "pytest-runner (>=4.4) ; extra == 'dev'",
      "pytest-qt (>=3.3.0) ; extra == 'dev'",
      "quilt3 (>=3.1.12) ; extra == 'dev'",
      "Sphinx (<3,>=2.0.0b1) ; extra == 'dev'",
      "sphinx-rtd-theme (>=0.1.2) ; extra == 'dev'",
      "tox (>=3.5.2) ; extra == 'dev'",
      "twine (>=1.13.0) ; extra == 'dev'",
      "wheel (>=0.33.1) ; extra == 'dev'",
      "pytest-runner ; extra == 'setup'",
      "black (>=19.10b0) ; extra == 'test'",
      "codecov (>=2.0.22) ; extra == 'test'",
      "docutils (<0.16,>=0.10) ; extra == 'test'",
      "flake8 (>=3.7.7) ; extra == 'test'",
      "psutil (>=5.7.0) ; extra == 'test'",
      "pytest (>=4.3.0) ; extra == 'test'",
      "pytest-cov (==2.6.1) ; extra == 'test'",
      "pytest-raises (>=0.10) ; extra == 'test'",
      "pytest-qt (>=3.3.0) ; extra == 'test'",
      "quilt3 (>=3.1.12) ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "requires_external": null,
    "project_url": null,
    "provides_extra": [
      "all",
      "dev",
      "setup",
      "test"
    ],
    "provides_dist": null,
    "obsoletes_dist": null
  },
  "npe1_shim": true
}