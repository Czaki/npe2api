{"name": "napari-sc3D-viewer", "display_name": "sc3D Viewer", "schema_version": "0.1.0", "on_activate": null, "on_deactivate": null, "contributions": {"commands": [{"id": "napari-sc3D-viewer.sc3D_viewer", "title": "Make sc3D Viewer Widget", "python_name": "napari_sc3d_viewer._widget:Startsc3D", "short_title": null, "category": null, "icon": null, "enablement": null}], "readers": null, "writers": null, "widgets": [{"command": "napari-sc3D-viewer.sc3D_viewer", "display_name": "Start sc3D Viewer", "autogenerate": false}], "sample_data": null, "themes": null, "menus": {}, "submenus": null}, "package_metadata": {"metadata_version": "2.1", "name": "napari-sc3D-viewer", "version": "0.1.0", "dynamic": null, "platform": null, "supported_platform": null, "summary": "A plugin to visualize 3D single cell omics", "description": "# napari-sc3D-viewer\n\n<!-- [![License](https://img.shields.io/pypi/l/napari-sc3D-viewer.svg?color=green)](https://raw.githubusercontent.com/GuignardLab/napari-sc3D-viewer/main/LICENSE) -->\n[![PyPI](https://img.shields.io/pypi/v/napari-sc3D-viewer.svg?color=green)](https://pypi.org/project/napari-sc3D-viewer)\n<!-- [![Python Version](https://img.shields.io/pypi/pyversions/napari-sc3D-viewer.svg?color=green)](https://python.org) -->\n\n [![tests](https://github.com/GuignardLab/napari-sc3D-viewer/workflows/tests/badge.svg)](https://github.com/GuignardLab/napari-sc3D-viewer/actions)\n[![codecov](https://codecov.io/gh/GuignardLab/napari-sc3D-viewer/branch/main/graph/badge.svg)](https://codecov.io/gh/GuignardLab/napari-sc3D-viewer)\n[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-sc3D-viewer)](https://napari-hub.org/plugins/napari-sc3D-viewer)\n\n\nA plugin to visualise 3D spatial single cell omics\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using [@napari]'s [cookiecutter-napari-plugin] template.\n\n## Installation\n\nYou can install `napari-sc3D-viewer` via [pip]:\n\n    pip install .\n(from the correct folder)\nor\n\n    pip install napari-sc3D-viewer\n\nTo install latest development version :\n\n    pip install git+https://github.com/GuignardLab/napari-sc3D-viewer.git\n\nTo install the surface computation enabled version it is necessary to use Python 3.9 (until [VTK] is ported to Python 3.10) and you can run one of the following commands:\n\n    pip install '.[pyvista]'\nfrom the correct folder or\n\n    pip install napari-sc3D-viewer[pyvista]\n\nto install directly from pip or\n\n    pip install 'napari-sc3D-viewer[pyvista] @ git+https://github.com/GuignardLab/napari-sc3D-viewer.git'\n\nto install the latest version\n\n## Usage\n\n`napari-sc3D-viewer` allows users to easily visualise and navigate 3D spatial single-cell transcriptomics using napari.\n\n### Loading and opening a dataset\n\n<!-- To test your the plugin you can download the following dataset composed of a id to tissue name file located [there](https://github.com/GuignardLab/sc3D/tree/main/data) and a scanpy h5ad dataset [there](https://figshare.com/s/1c29d867bc8b90d754d2). The dataset is from the following publication: [pub] -->\n\nThe expected dataset is a [scanpy]/[anndata] h5ad file together with an optional json file that maps cluster id numbers to actual tissue/cluster name.\n\nThe json file should look like that:\n```json\n{\n    \"1\": \"Endoderm\",\n    \"2\": \"Heart\",\n    \"10\": \"Anterior neuroectoderm\"\n}\n```\nIf no json file or a wrong json file is given, the original cluster id numbers are used.\n\nThe h5ad file should be informed in (1) and the json file in (2).\n![loading image](images/1.loading.png)\n\nLet `data` be your h5ad data structure. To work properly, the viewer is expecting 4 different columns to be present in the h5ad file:\n- the cluster id column (by default named 'predicted.id' that can be accessed as `data.obs['predicted.id']`)\n- the 3D position column (by default named 'X_spatial_registered' that can be accessed as `data.obsm['X_spatial_registered']`)\n- the gene names if not already in the column name (by default named 'feature_name' that can be accessed as `data.var['feature_name']`)\n- umap coordinates (by default named 'X_umap' that can be accessed as `data.obsm['X_umap']`)\n\nIf the default column names are not consistent with your dataset, they can be changed in the tab `Parameters` (3) next to the tab `Loading files`\n\nOnce all the data paths and fields are correctly informed pressing the `Load Atlas` button (4) will load the dataset.\n\n### Exploring a dataset\n\nOnce the dataset is loaded there are few options to explore it.\n\nThe viewer should look like to the following:\n![viewer](images/2.viewer.png)\n\nIt is divided in two main parts, the Tissue visualisation (1) part and the Metric visualisation (2) one.\nBoth of them are themselves split in two and three tabs respectively. All these tabs allow you to visualise and explore the dataset in different fashions.\n\nThe Tissues tab (1.1) allows to select the tissues to display, to show the legend and to colour the cells according to their tissue types.\n\nThe Surfaces tab (1.2) allows to construct coarse surfaces of tissues and to display them.\n\nThe Single metric tab (2.1) allows to display a metric, whether it is a gene intensity or a numerical metric that is embedded in the visualised dataset. This tab also allows to threshold cells according to the viewed metric, to change the contrast and the colour map.\n\nThe 2 Genes (2.2) tab allows to display gene coexpression.\n\nThe umap tab (2.3) allows to display the umap of the selected cells and to manually select subcategories of cells to be displayed.\n\n![viewer](images/3.description.png)\n\n#### Explanatory \"videos\".\nThe plugin is meant to be easy to use. That means that you should be able to play with it and figure things out by yourself.\n\nThat being said, it is not always that easy. You can find below a series of videos showing how to perform some of the main features.\n\n#### Loading data\n![Loading data video](images/loading.gif)\n\n#### Selecting tissues\n![Selecting tissues video](images/tissue-select.gif)\n\n#### Displaying one gene\n![Displaying one gene video](images/gene1.gif)\n\n#### Displaying two genes co-expression\n![Displaying genes video](images/gene2.gif)\n\n#### Playing with the umap\n![Playing with the umap video](images/umap.gif)\n\n#### Computing and processing the surface\n![Computing and processing the surface video](images/surfaces.gif)\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [MIT] license,\n\"napari-sc3D-viewer\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/GuignardLab/napari-sc3D-viewer/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n[VTK]: https://vtk.org/\n[scanpy]: https://scanpy.readthedocs.io/en/latest/index.html\n[anndata]: https://anndata.readthedocs.io/en/latest/\n", "description_content_type": "text/markdown", "keywords": null, "home_page": "https://github.com/GuignardLab/napari-sc3D-viewer", "download_url": null, "author": "Leo Guignard", "author_email": "leo.guignard@univ-amu.fr", "maintainer": null, "maintainer_email": null, "license": "MIT", "classifier": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Framework :: napari", "Topic :: Software Development :: Testing", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Operating System :: OS Independent", "License :: OSI Approved :: MIT License"], "requires_dist": ["numpy", "napari", "magicgui", "qtpy", "sc-3D", "matplotlib", "pyqt5", "pyvista ; extra == 'pyvista'", "tox ; extra == 'testing'", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'", "pytest-qt ; extra == 'testing'", "napari ; extra == 'testing'", "pyqt5 ; extra == 'testing'"], "requires_python": ">=3.8", "requires_external": null, "project_url": ["Bug Tracker, https://github.com/GuignardLab/napari-sc3D-viewer/issues", "Documentation, https://github.com/GuignardLab/napari-sc3D-viewer#README.md", "Source Code, https://github.com/GuignardLab/napari-sc3D-viewer", "User Support, https://github.com/GuignardLab/napari-sc3D-viewer/issues", "Twitter, https://twitter.com/guignardlab"], "provides_extra": ["pyvista", "testing"], "provides_dist": null, "obsoletes_dist": null}, "npe1_shim": false}